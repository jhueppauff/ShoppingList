@using ShoppingList.Data
@inject ShoppingListService shoppingListsService
@inject ConfigurationService configurationService

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    private string user;
    private List<Shared.Model.ShoppingList> shoppingLists;

    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationStateTask;
        
        if (configurationService.AuthenticationMode() == "AAD")
        {
            user = authState.User.Identity.Name;
        }
        else if (configurationService.AuthenticationMode() == "B2C")
        {
            user = authState.User.FindFirst("http://schemas.microsoft.com/identity/claims/objectidentifier").Value;
        }

        shoppingLists = await shoppingListsService.GetShoppingListsAsync(user).ConfigureAwait(false);;
    }
}

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">ShoppingList</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        @if (shoppingLists == null)
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link">
                    <span class="oi oi-reload" aria-hidden="true"></span>Loading...
                </NavLink>
            </li>
        }
        else
        {
            @foreach (var item in shoppingLists)
            {
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href=@($"/List/{item.RowKey}") Match="NavLinkMatch.All">
                        <span class="oi oi-list" aria-hidden="true"></span> @item.RowKey
                    </NavLink>
                </li>
            }
        }
    </ul>
</div>

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
